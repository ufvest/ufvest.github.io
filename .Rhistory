momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 3)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 3.5)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 2.5)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 3)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 81,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 100,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(30, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 100,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(30, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 100,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.3, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.2, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.1, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.5, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.7, kurtosis = 2)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.7, kurtosis = 1)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.7, kurtosis = 1.5)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.7, kurtosis = 1.8)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 81,skewness = 0.7, kurtosis = 1.8)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 81,skewness = 0.5, kurtosis = 1.8)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 81,skewness = 0.7, kurtosis = 2.5)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
momentsA <- c(mean = 55,variance = 64,skewness = 0.7, kurtosis = 2.5)
momentsB <- c(mean = 55,variance = 10,skewness = 1.5, kurtosis = 8)
set.seed(100)
dados <- data.frame(A = rpearson(50, moments = momentsA),
B = rpearson(50, moments = momentsB))
boxplot(dados, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
dados2 <- data.frame(A=c(runif(25,45,53),runif(25,53,55),runif(25,55,60),runif(25,60,70)),B=c(runif(25,50,53),runif(25,53,57),runif(25,57,59),runif(25,59,61)))
boxplot(dados2, range = 0, ylim = c(40,80),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
boxplot(dados2, range = 0, ylim = c(44,71),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
boxplot(dados2, range = 0, ylim = c(44,72),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
boxplot(dados2, range = 0, ylim = c(44,70),
xlab = "Técnica cirúrgica",
ylab = "Tempo de recuperação (dias)")
dados <- data.frame(A=c(runif(25,45,53),runif(25,53,55),runif(25,55,60),runif(25,60,70)),B=c(runif(25,50,53),runif(25,53,57),runif(25,57,59),runif(25,59,61)))
boxplot(dados, range = 0, ylim = c(44,70),
xlab = "Corretoras",
ylab = "Lucro")
x=c(1,0,1,2,1,3,1,1,0,0,0,0,1,1,2,4,0,0)
order(x)
rol(x)
sort(x,decreasing = F)
summary(x)
statmod <- function(x) {
z <- table(as.vector(x)) names(z)[z == max(z)]
}
statmod <- function(x){
z <- table(as.vector(x))
names(z)[z == max(z)]
}
statmod(x)
x=c(1,0,1,2,1,3,1,1,0,0,0,0,1,1,2,4,0,0)
sort(x,decreasing = F)
summary(x)
moda <- function(x){
z <- table(as.vector(x))
names(z)[z == max(z)]
}
moda(x)
range(x)
diff(range(x))
IQR(x)
mean(x)
x <- c(25,28,28,30,31,32,36,45,45,45,47,50,55,58,58,59,63,64,68,73)
stem(x)
stem(x, scale = 1, width = 80, atom = 1e-08)
stem(x, scale = 1, width = 80, atom = 1)
stem(x, scale = 1, width = 280, atom = 1)
stem(x, scale = 2, width = 280, atom = 1)
stem2 <- function(x) {
cx <- gsub('^.', ', ', as.character(sort(x)))
co <- capture.output(stem(x))
m <- gregexpr('\\d(?!.*\\|)', co, perl = TRUE)
l <- regmatches(co, m)
l <- t(do.call('rbind', lapply(l, `length<-`, max(lengths(l)))))
l[!is.na(l)] <- cx
regmatches(co, m) <- data.frame(l)
cat(gsub(' , ', ' ', co), sep = '\n')
}
stem2(x)
cat(gsub('  ', ' ', co), sep = '\n')
stem2 <- function(x) {
cx <- gsub('^.', ', ', as.character(sort(x)))
co <- capture.output(stem(x))
m <- gregexpr('\\d(?!.*\\|)', co, perl = TRUE)
l <- regmatches(co, m)
l <- t(do.call('rbind', lapply(l, `length<-`, max(lengths(l)))))
l[!is.na(l)] <- cx
regmatches(co, m) <- data.frame(l)
cat(gsub('  ', ' ', co), sep = '\n')
}
stem2(x)
stem2 <- function(x) {
cx <- gsub('^.', ' ', as.character(sort(x)))
co <- capture.output(stem(x))
m <- gregexpr('\\d(?!.*\\|)', co, perl = TRUE)
l <- regmatches(co, m)
l <- t(do.call('rbind', lapply(l, `length<-`, max(lengths(l)))))
l[!is.na(l)] <- cx
regmatches(co, m) <- data.frame(l)
cat(gsub(' , ', ' ', co), sep = '\n')
}
stem2(x)
mean(x)
median(x)
moda(x)
tab2_1 <- read.table("Dados/CompanhiaMB_clear3.csv",dec = ",",sep = ";",header = TRUE)
url <- url(https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv)
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
knitr::opts_chunk$set(echo = FALSE)
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
ni
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
ni
tab2_1$Grau
fi
p_fi
ni
# Adiciona linhas de total
ni<-c(ni,sum(ni))
ni
fi<-c(fi,sum(fi))
fi
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
fi
p_fi<-c(p_fi,sum(p_fi))
p_fi
names(ni)[4]<-"Total"
ni
fi
round(fi,digits=2)
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
rbind(ni, p_fi = 100*prop.table(ni))
c(sum(tab2_4[1,]),sum(tab2_4[2,])
)
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
colnames(tab2_4)
tab2_4
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequ
tab2_4
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
))),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4
t(cbind(
tab2_4,
c(sum(tab2_4[1,]),sum(tab2_4[2,])
)))
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4)),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(tab2_1$Grau) # Calcula a tabela de frequências absolutas e armazena o resultado em 'mytab'
fi<-prop.table(ni) # Tabela de frequências relativas (f_i)
p_fi<-100*prop.table(ni) # Porcentagem (100 f_i)
# Adiciona linhas de total
ni<-c(ni,sum(ni))
fi<-c(fi,sum(fi))
p_fi<-c(p_fi,sum(p_fi))
names(ni)[4]<-"Total"
tab2_2<-cbind(ni,fi=round(fi,digits=2),p_fi=round(p_fi,digits=2))
tab2_2
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,c(sum(tab2_4[1,]),sum(tab2_4[2,]))
)),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
rm(list = ls())
url <- url("https://raw.githack.com/maf105/maf105.github.io/master/Aulas_MAF105/Curso_R/Dados/CompanhiaMB_clear3.csv")
tab2_1 <- read.table(url,dec = ",",sep = ";",header = TRUE)
ni<-table(cut(tab2_1$Salario, breaks = seq(4,24,by=4),right=FALSE)) # Frequencias por categorias
tab2_4 <- rbind(ni, p_fi = 100*prop.table(ni)) # Frequencias relativas em %
#quebras de linha apenas ilustrativas para facilitar a leitura
tab2_4 <- as.data.frame(
t(cbind(
tab2_4,c(sum(tab2_4[1,]),sum(tab2_4[2,])) #Esta linha foi add somente para manter os nomes das colunas
)),row.names =c(colnames(tab2_4),"Total")) #Construcao da tabela
tab2_4<-transform(tab2_4,p_fi=round(p_fi,digits=2))
tab2_4
install.packages("dplyr")
pnorm(0.998)
citation("data.table")
citation("ggplot2")
citation("tidyverse")
citation("stringr")
citation("dplyr")
citation("shiny")
version
cite(R)
cite(R)
cite()
citation()
